#!/bin/sh /etc/rc.common
#
# Copyright (C) 2019-2022 pexcn <i@pexcn.me>
#
# This is free software, licensed under the GNU General Public License v3.
# See /LICENSE for more information.
#

START=99

USE_PROCD=1
#PROCD_DEBUG=1

append_param() {
	local section="$1"
	local option="$2"
	local switch="$3"
	local default="$4"
	local _loctmp
	config_get _loctmp "$section" "$option" "$default"
	[ -n "$_loctmp" ] || return 0
	procd_append_param command "$switch" "$_loctmp"
}

append_bool() {
	local section="$1"
	local option="$2"
	local value="$3"
	local default="$4"
	local _loctmp
	config_get_bool _loctmp "$section" "$option" "$default"
	[ "$_loctmp" = 1 ] || return 0
	procd_append_param command "$value"
}

get_cpu_cores() {
	grep -c "^processor" /proc/cpuinfo
}

start_dns2tcp() {
	local enable
	config_get_bool enable $1 enable
	[ "$enable" = 1 ] || return 0

	local reuse_port instances=$(get_cpu_cores)
	config_get_bool reuse_port $1 reuse_port
	[ "$reuse_port" = 1 ] || instances=1

	for i in $(seq 1 $instances); do
		procd_open_instance
		procd_set_param respawn
		procd_set_param stdout 1
		procd_set_param stderr 1
		procd_set_param nice -5
		procd_set_param limits nofile="1048576 1048576"
		procd_set_param command /usr/bin/dns2tcp
		append_param $1 udp_listen "-L"
		append_param $1 tcp_remote "-R"
		append_param $1 tcp_syncnt "-s"
		append_bool $1 ipv6_v6only "-6"
		append_bool $1 reuse_port "-r"
		append_bool $1 tcp_quickack "-a"
		append_bool $1 tcp_fastopen "-f"
		append_bool $1 verbose "-v"
		procd_close_instance
	done
}

start_service() {
	config_load dns2tcp
	config_foreach start_dns2tcp dns2tcp
}
